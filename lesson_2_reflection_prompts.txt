Q: What happens when you initialize a repository ? Why do you need to do it ? 
When I initialize a respository, git starts tracking the files in it. I need to do it to be able to commit the work.

Q:How is the staging area different from the working directory and the repository? What value do you think it offers?
A:Staging area is the actual repository. It helps to keep it seperate from the working directory so that I can make commit to only the changes i need.

Q: How can you use the staging area to make sure you have one commit per logical change?
By comparing the command git diff, it compares working directory to staging area.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A: When I have to make some experimental changes which i don’t want to impact the master branch. Also branches can help see several experiments at the same time.

Q : How do the diagrams help you visualize the branch structure?
A : By telling is the last commit which is common to all the branches, and also the timelines of which commits in each branch was made 

q: What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A: By merging the two branches , the individual changes in each branch is now available in the merged branch. That is why in the diagram two branches are individual lines with each commit as its node, while after merge , the all commits of the merged branches can be reached within the merged branch. Hence they are represented as coming together.

q: What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
A : Pro : The resulting merged file is not always a squish together version of all changes which potentially don’t make sense.

Pro : Leaves out unintended changes by forcing authors to look at the changes which are in conflict.

Con : The authors have to figure a way to resolve conflict which takes time 






